/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package presentation;

import dConnection.DbConnection;
import java.awt.Color;
import static java.awt.Color.blue;
import static java.awt.Color.red;
import static java.awt.Color.white;
import java.awt.Toolkit;
import java.util.Random;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import persistence.Records;
/**
 *
 * @author giba01
 */
public class formPlayer extends javax.swing.JFrame {
   
    Records records = new Records();
    DbConnection connection;
    private Object resultDraw;
    private int victoryO = 0;
    private int victoryX = 0;
    private Integer limit;
    private int rec;
    private int count;
    private int count1;
    /**
     * Creates new form formPlayer
     */
    public formPlayer() {
        this.connection = new DbConnection();
        initComponents();
        setLocationRelativeTo(null);
        insertIcon();
        ImageIcon icon = createImageIcon("/images/logo_preto.png", "Logo");
        lblLogo.setIcon(icon);
        txtPair.setEditable(false);
        txtOdd.setEditable(false);
        txtVictoriesX.setEditable(false);
        txtVictoriesO.setEditable(false);
        txtLimit.requestFocus();
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jCheckBoxMenuItem1 = new javax.swing.JCheckBoxMenuItem();
        btn3 = new javax.swing.JButton();
        btn2 = new javax.swing.JButton();
        btn1 = new javax.swing.JButton();
        btn4 = new javax.swing.JButton();
        btn5 = new javax.swing.JButton();
        btn6 = new javax.swing.JButton();
        btn9 = new javax.swing.JButton();
        btn8 = new javax.swing.JButton();
        btn7 = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        txtPair = new javax.swing.JTextField();
        txtOdd = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        btnDraw = new javax.swing.JButton();
        btnToCleanCampaign = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        btnToClean = new javax.swing.JButton();
        lblExplanation = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        lblLogo = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtVictoriesO = new javax.swing.JTextField();
        txtVictoriesX = new javax.swing.JTextField();
        lblVictoriesX = new javax.swing.JLabel();
        lblVictoriesO = new javax.swing.JLabel();
        txtLimit = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        mbMenu1 = new javax.swing.JMenuBar();
        mbMenu = new javax.swing.JMenu();
        cbkTheme = new javax.swing.JCheckBoxMenuItem();
        ckbSubtitle = new javax.swing.JCheckBoxMenuItem();
        miClose = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();

        jCheckBoxMenuItem1.setSelected(true);
        jCheckBoxMenuItem1.setText("jCheckBoxMenuItem1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Hash");
        setFont(new java.awt.Font("7pixelsOfPerfect", 0, 14)); // NOI18N
        setIconImage(getIconImage());
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btn3.setFont(new java.awt.Font("sansserif", 0, 36)); // NOI18N
        btn3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        btn3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btn3.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btn3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn3ActionPerformed(evt);
            }
        });
        getContentPane().add(btn3, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 0, 72, 50));

        btn2.setFont(new java.awt.Font("sansserif", 0, 36)); // NOI18N
        btn2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        btn2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btn2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btn2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn2ActionPerformed(evt);
            }
        });
        getContentPane().add(btn2, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 6, 68, 50));

        btn1.setFont(new java.awt.Font("sansserif", 0, 36)); // NOI18N
        btn1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        btn1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btn1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn1ActionPerformed(evt);
            }
        });
        getContentPane().add(btn1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 0, 68, 52));

        btn4.setFont(new java.awt.Font("sansserif", 0, 36)); // NOI18N
        btn4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        btn4.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btn4.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btn4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn4ActionPerformed(evt);
            }
        });
        getContentPane().add(btn4, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 64, 68, 52));

        btn5.setFont(new java.awt.Font("sansserif", 0, 36)); // NOI18N
        btn5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        btn5.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btn5.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btn5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn5ActionPerformed(evt);
            }
        });
        getContentPane().add(btn5, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 64, 68, 50));

        btn6.setFont(new java.awt.Font("sansserif", 0, 36)); // NOI18N
        btn6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        btn6.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btn6.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btn6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn6ActionPerformed(evt);
            }
        });
        getContentPane().add(btn6, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 60, 72, 50));

        btn9.setFont(new java.awt.Font("sansserif", 0, 36)); // NOI18N
        btn9.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        btn9.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btn9.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btn9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn9ActionPerformed(evt);
            }
        });
        getContentPane().add(btn9, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 130, 72, 50));

        btn8.setFont(new java.awt.Font("sansserif", 0, 36)); // NOI18N
        btn8.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        btn8.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btn8.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btn8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn8ActionPerformed(evt);
            }
        });
        getContentPane().add(btn8, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 122, 68, 50));

        btn7.setFont(new java.awt.Font("sansserif", 0, 36)); // NOI18N
        btn7.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        btn7.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btn7.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btn7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn7ActionPerformed(evt);
            }
        });
        getContentPane().add(btn7, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 130, 68, 52));

        jLabel6.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 182, 340, -1));

        txtPair.setFont(new java.awt.Font("sansserif", 0, 48)); // NOI18N
        txtPair.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtPair.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txtPair.setSelectedTextColor(new java.awt.Color(255, 0, 0));
        getContentPane().add(txtPair, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 190, 60, 40));

        txtOdd.setFont(new java.awt.Font("sansserif", 0, 48)); // NOI18N
        txtOdd.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtOdd.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txtOdd.setSelectedTextColor(new java.awt.Color(0, 0, 204));
        getContentPane().add(txtOdd, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 190, 60, 40));

        jLabel7.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 232, 340, -1));

        btnDraw.setFont(new java.awt.Font("a Aha Wow", 0, 16)); // NOI18N
        btnDraw.setText("SORTEIO");
        btnDraw.setToolTipText("\"Escolha 'X' ou 'O' para sortear!!\"");
        btnDraw.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnDraw.setFocusable(false);
        btnDraw.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnDrawMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnDrawMouseExited(evt);
            }
        });
        btnDraw.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDrawActionPerformed(evt);
            }
        });
        getContentPane().add(btnDraw, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 190, 100, 40));

        btnToCleanCampaign.setFont(new java.awt.Font("a Aha Wow", 0, 28)); // NOI18N
        btnToCleanCampaign.setText("LC");
        btnToCleanCampaign.setToolTipText("Tecle 1X para limpar a Campanha ou  2X para zerar registro de recordes!");
        btnToCleanCampaign.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnToCleanCampaign.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnToCleanCampaign.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnToCleanCampaignMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnToCleanCampaignMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnToCleanCampaignMouseExited(evt);
            }
        });
        btnToCleanCampaign.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnToCleanCampaignActionPerformed(evt);
            }
        });
        getContentPane().add(btnToCleanCampaign, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 300, 60, 110));

        jLabel1.setFont(new java.awt.Font("sansserif", 0, 100)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(204, 0, 0));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("X");
        jLabel1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 210, 150, 170));

        btnToClean.setFont(new java.awt.Font("a Aha Wow", 0, 28)); // NOI18N
        btnToClean.setText("LJ"); // NOI18N
        btnToClean.setToolTipText(" Limpar Jogo!!");
        btnToClean.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnToClean.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnToCleanMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnToCleanMouseExited(evt);
            }
        });
        btnToClean.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnToCleanActionPerformed(evt);
            }
        });
        getContentPane().add(btnToClean, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 300, 60, 110));

        lblExplanation.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        lblExplanation.setForeground(new java.awt.Color(0, 0, 204));
        lblExplanation.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblExplanation.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        lblExplanation.setFocusable(false);
        lblExplanation.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        lblExplanation.setVerticalTextPosition(javax.swing.SwingConstants.TOP);
        getContentPane().add(lblExplanation, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 420, 340, 20));

        jLabel8.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 410, 340, -1));

        lblLogo.setFont(new java.awt.Font("sansserif", 0, 48)); // NOI18N
        lblLogo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblLogo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/logo_preto.png"))); // NOI18N
        lblLogo.setBorder(null);
        lblLogo.setFocusable(false);
        lblLogo.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        getContentPane().add(lblLogo, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 250, 180, 157));

        jLabel2.setFont(new java.awt.Font("sansserif", 0, 100)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 204));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("O");
        jLabel2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 240, -1, 90));

        txtVictoriesO.setFont(new java.awt.Font("sansserif", 0, 36)); // NOI18N
        txtVictoriesO.setForeground(new java.awt.Color(0, 0, 204));
        txtVictoriesO.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtVictoriesO.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        getContentPane().add(txtVictoriesO, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 260, 60, 40));

        txtVictoriesX.setFont(new java.awt.Font("sansserif", 0, 36)); // NOI18N
        txtVictoriesX.setForeground(new java.awt.Color(255, 0, 0));
        txtVictoriesX.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtVictoriesX.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        getContentPane().add(txtVictoriesX, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 260, 60, 40));

        lblVictoriesX.setFont(new java.awt.Font("sansserif", 0, 13)); // NOI18N
        lblVictoriesX.setText("Vitórias de X");
        getContentPane().add(lblVictoriesX, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 240, 80, -1));

        lblVictoriesO.setFont(new java.awt.Font("sansserif", 0, 13)); // NOI18N
        lblVictoriesO.setText("Vitórias de O");
        getContentPane().add(lblVictoriesO, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 240, 83, -1));

        txtLimit.setFont(new java.awt.Font("sansserif", 0, 24)); // NOI18N
        txtLimit.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtLimit.setToolTipText("Digite o número de partidas a serem disputadas!!\n");
        txtLimit.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txtLimit.setSelectedTextColor(new java.awt.Color(255, 0, 0));
        txtLimit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                txtLimitMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                txtLimitMouseExited(evt);
            }
        });
        getContentPane().add(txtLimit, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 190, 60, 40));

        jLabel3.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 40, 180));

        jLabel4.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 0, 50, 180));

        jLabel5.setFont(new java.awt.Font("sansserif", 0, 200)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 0, 0));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("X");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 10, 160, 170));

        jLabel9.setFont(new java.awt.Font("sansserif", 0, 200)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(0, 0, 204));
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("O");
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 10, 160, 170));

        mbMenu1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        mbMenu1.setFocusable(false);

        mbMenu.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        mbMenu.setText("Menu");
        mbMenu.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        mbMenu.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N

        cbkTheme.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        cbkTheme.setSelected(true);
        cbkTheme.setText("Ativar/Desativar Tema Escuro");
        cbkTheme.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        cbkTheme.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbkThemeActionPerformed(evt);
            }
        });
        mbMenu.add(cbkTheme);

        ckbSubtitle.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        ckbSubtitle.setSelected(true);
        ckbSubtitle.setText("Ativar/Desativar Legendas");
        ckbSubtitle.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        ckbSubtitle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ckbSubtitleActionPerformed(evt);
            }
        });
        mbMenu.add(ckbSubtitle);

        miClose.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        miClose.setText("Fechar");
        miClose.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        miClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miCloseActionPerformed(evt);
            }
        });
        mbMenu.add(miClose);

        mbMenu1.add(mbMenu);
        mbMenu1.add(jMenu2);

        setJMenuBar(mbMenu1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void miCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miCloseActionPerformed
        close();
    }//GEN-LAST:event_miCloseActionPerformed

    private void btn3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn3ActionPerformed
        if (btn3.getText().isEmpty() && "X".equals(resultDraw)) {
            number++;
            toCleanDraw();
            if (number % 2 != 0) {
                btn3.setText("X");
                btn3.setForeground(red);
                playerXWinner();
            } else {
                btn3.setText("O");
                btn3.setForeground(blue);
                playerOWinner();
            }
        }
        if (btn3.getText().isEmpty() && "O".equals(resultDraw)) {
            number++;
            toCleanDraw();
            if (number % 2 != 0) {
                btn3.setText("O");
                btn3.setForeground(blue);
                playerOWinner();
            } else {
                btn3.setText("X");
                btn3.setForeground(red);
                playerXWinner();
            }
        }
    }//GEN-LAST:event_btn3ActionPerformed

    private void btn2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn2ActionPerformed
        if (btn2.getText().isEmpty() && "X".equals(resultDraw)) {
            number++;
            toCleanDraw();
            if (number % 2 != 0) {
                btn2.setText("X");
                btn2.setForeground(red);
                playerXWinner();
            } else {
                btn2.setText("O");
                btn2.setForeground(blue);
                playerOWinner();
            }
        }
        if (btn2.getText().isEmpty() && "O".equals(resultDraw)) {
            number++;
            toCleanDraw();
            if (number % 2 != 0) {
                btn2.setText("O");
                btn2.setForeground(blue);
                playerOWinner();
            } else {
                btn2.setText("X");
                btn2.setForeground(red);
                playerXWinner();
            }
        }
    }//GEN-LAST:event_btn2ActionPerformed

    private void btn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn1ActionPerformed
        if (btn1.getText().isEmpty() && "X".equals(resultDraw)) {
            number++;
            toCleanDraw();
            if (number % 2 != 0) {
                btn1.setText("X");
                btn1.setForeground(red);
                playerXWinner();
            } else {
                btn1.setText("O");
                btn1.setForeground(blue);
                playerOWinner();
            }
        }
        if (btn1.getText().isEmpty() && "O".equals(resultDraw)) {
            number++;
            toCleanDraw();
            if (number % 2 != 0) {
                btn1.setText("O");
                btn1.setForeground(blue);
                playerOWinner();
            } else {
                btn1.setText("X");
                btn1.setForeground(red);
                playerXWinner();
            }
        }
    }//GEN-LAST:event_btn1ActionPerformed

    private void btn4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn4ActionPerformed
        if (btn4.getText().isEmpty() && "X".equals(resultDraw)) {
            number++;
            toCleanDraw();
            if (number % 2 != 0) {
                btn4.setText("X");
                btn4.setForeground(red);
                playerXWinner();
            } else {
                btn4.setText("O");
                btn4.setForeground(blue);
                playerOWinner();
            }
        }
        if (btn4.getText().isEmpty() && "O".equals(resultDraw)) {
            number++;
            toCleanDraw();
            if (number % 2 != 0) {
                btn4.setText("O");
                btn4.setForeground(blue);
                playerOWinner();
            } else {
                btn4.setText("X");
                btn4.setForeground(red);
                playerXWinner();
            }
        }
    }//GEN-LAST:event_btn4ActionPerformed

    private void btn5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn5ActionPerformed
        if (btn5.getText().isEmpty() && "X".equals(resultDraw)) {
            number++;
            toCleanDraw();
            if (number % 2 != 0) {
                btn5.setText("X");
                btn5.setForeground(red);
                playerXWinner();
            } else {
                btn5.setText("O");
                btn5.setForeground(blue);
                playerOWinner();
            }
        }
        if (btn5.getText().isEmpty() && "O".equals(resultDraw)) {
            number++;
            toCleanDraw();
            if (number % 2 != 0) {
                btn5.setText("O");
                btn5.setForeground(blue);
                playerOWinner();
            } else {
                btn5.setText("X");
                btn5.setForeground(red);
                playerXWinner();
            }
        }
    }//GEN-LAST:event_btn5ActionPerformed

    private void btn6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn6ActionPerformed
        if (btn6.getText().isEmpty() && "X".equals(resultDraw)) {
            number++;
            toCleanDraw();
            if (number % 2 != 0) {
                btn6.setText("X");
                btn6.setForeground(red);
                playerXWinner();
            } else {
                btn6.setText("O");
                btn6.setForeground(blue);
                playerOWinner();
            }
        }
        if (btn6.getText().isEmpty() && "O".equals(resultDraw)) {
            number++;
            toCleanDraw();
            if (number % 2 != 0) {
                btn6.setText("O");
                btn6.setForeground(blue);
                playerOWinner();
            } else {
                btn6.setText("X");
                btn6.setForeground(red);
                playerXWinner();
            }
        }
    }//GEN-LAST:event_btn6ActionPerformed

    private void btn9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn9ActionPerformed
        if (btn9.getText().isEmpty() && "X".equals(resultDraw)) {
            number++;
            toCleanDraw();
            if (number % 2 != 0) {
                btn9.setText("X");
                btn9.setForeground(red);
                playerXWinner();
            } else {
                btn9.setText("O");
                btn9.setForeground(blue);
                playerOWinner();
            }
        }
        if (btn9.getText().isEmpty() && "O".equals(resultDraw)) {
            number++;
            toCleanDraw();
            if (number % 2 != 0) {
                btn9.setText("O");
                btn9.setForeground(blue);
                playerOWinner();
            } else {
                btn9.setText("X");
                btn9.setForeground(red);
                playerXWinner();
            }
        }
    }//GEN-LAST:event_btn9ActionPerformed

    private void btn8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn8ActionPerformed
        if (btn8.getText().isEmpty() && "X".equals(resultDraw)) {
            number++;
            toCleanDraw();
            if (number % 2 != 0) {
                btn8.setText("X");
                btn8.setForeground(red);
                playerXWinner();
            } else {
                btn8.setText("O");
                btn8.setForeground(blue);
                playerOWinner();
            }
        }
        if (btn8.getText().isEmpty() && "O".equals(resultDraw)) {
            number++;
            toCleanDraw();
            if (number % 2 != 0) {
                btn8.setText("O");
                btn8.setForeground(blue);
                playerOWinner();
            } else {
                btn8.setText("X");
                btn8.setForeground(red);
                playerXWinner();
            }
        }
    }//GEN-LAST:event_btn8ActionPerformed

    private void btn7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn7ActionPerformed
        if (btn7.getText().isEmpty() && "X".equals(resultDraw)) {
            number++;
            toCleanDraw();
            if (number % 2 != 0) {
                btn7.setText("X");
                btn7.setForeground(red);
                playerXWinner();
            } else {
                btn7.setText("O");
                btn7.setForeground(blue);
                playerOWinner();
            }
        }
        if (btn7.getText().isEmpty() && "O".equals(resultDraw)) {
            number++;
            toCleanDraw();
            if (number % 2 != 0) {
                btn7.setText("O");
                btn7.setForeground(blue);
                playerOWinner();
            } else {
                btn7.setText("X");
                btn7.setForeground(red);
                playerXWinner();
            }
        }
    }//GEN-LAST:event_btn7ActionPerformed

    private void btnDrawMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnDrawMouseEntered
        if (!btnDraw.isEnabled()) {
            lblExplanation.setText("    Limpe a Campanha para começar novo jogo!");
            btnDraw.setToolTipText("Tecle LC para iniciar Nova campanha!!!");
        } else if (lblExplanation.getText().isEmpty()) {
            lblExplanation.setText("    Escolha 'X' ou 'O' e Tecle Sorteio!");
        }

    }//GEN-LAST:event_btnDrawMouseEntered

    private void btnDrawMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnDrawMouseExited
        if (lblExplanation.getText().equals("    Escolha 'X' ou 'O' e Tecle Sorteio!")) {
            lblExplanation.setText("");
        } else {

        }
    }//GEN-LAST:event_btnDrawMouseExited

    private void btnDrawActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDrawActionPerformed
        if (txtPair.getText().isEmpty() && txtOdd.getText().isEmpty()) {
            draw();
            btnToClean.requestFocus();
        }

    }//GEN-LAST:event_btnDrawActionPerformed

    private void btnToCleanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnToCleanActionPerformed
        toClean();
    }//GEN-LAST:event_btnToCleanActionPerformed

    private void btnToCleanMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnToCleanMouseEntered
        if (lblExplanation.getText().isEmpty()) {
            lblExplanation.setText("Novo Jogo!!");
        }
    }//GEN-LAST:event_btnToCleanMouseEntered

    private void btnToCleanMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnToCleanMouseExited
        lblExplanation.setText("");
    }//GEN-LAST:event_btnToCleanMouseExited

    private void txtLimitMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtLimitMouseEntered
        if (lblExplanation.getText().isEmpty()) {
            lblExplanation.setText("Digite neste campo o limite de partidas da Campanha!!");
        } else {
        }
    }//GEN-LAST:event_txtLimitMouseEntered

    private void txtLimitMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtLimitMouseExited
        lblExplanation.setText("");
    }//GEN-LAST:event_txtLimitMouseExited

    private void btnToCleanCampaignMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnToCleanCampaignMouseEntered
        if (lblExplanation.getText().isEmpty()) {
            lblExplanation.setText("Nova Campanha!!");
        }
    }//GEN-LAST:event_btnToCleanCampaignMouseEntered

    private void btnToCleanCampaignMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnToCleanCampaignMouseExited
        lblExplanation.setText("");
    }//GEN-LAST:event_btnToCleanCampaignMouseExited

    private void ckbSubtitleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ckbSubtitleActionPerformed
        subtitle();
    }//GEN-LAST:event_ckbSubtitleActionPerformed

    private void cbkThemeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbkThemeActionPerformed
        color();
    }//GEN-LAST:event_cbkThemeActionPerformed

    private void btnToCleanCampaignMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnToCleanCampaignMouseClicked
        if (evt.getClickCount() == 2) {
            records.deleteRecord();
        }
    }//GEN-LAST:event_btnToCleanCampaignMouseClicked

    private void btnToCleanCampaignActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnToCleanCampaignActionPerformed
            toClean3();
    }//GEN-LAST:event_btnToCleanCampaignActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(formPlayer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new formPlayer().setVisible(true);
        });
    }

    private final Random draw = new Random();
    private int numberDrawn = draw.nextInt(100) + 1;
    private int number = 0;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn1;
    private javax.swing.JButton btn2;
    private javax.swing.JButton btn3;
    private javax.swing.JButton btn4;
    private javax.swing.JButton btn5;
    private javax.swing.JButton btn6;
    private javax.swing.JButton btn7;
    private javax.swing.JButton btn8;
    private javax.swing.JButton btn9;
    private javax.swing.JButton btnDraw;
    private javax.swing.JButton btnToClean;
    private javax.swing.JButton btnToCleanCampaign;
    private javax.swing.JCheckBoxMenuItem cbkTheme;
    private javax.swing.JCheckBoxMenuItem ckbSubtitle;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItem1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JLabel lblExplanation;
    private javax.swing.JLabel lblLogo;
    private javax.swing.JLabel lblVictoriesO;
    private javax.swing.JLabel lblVictoriesX;
    private javax.swing.JMenu mbMenu;
    private javax.swing.JMenuBar mbMenu1;
    private javax.swing.JMenuItem miClose;
    private javax.swing.JTextField txtLimit;
    private javax.swing.JTextField txtOdd;
    private javax.swing.JTextField txtPair;
    private javax.swing.JTextField txtVictoriesO;
    private javax.swing.JTextField txtVictoriesX;
    // End of variables declaration//GEN-END:variables

    private void insertIcon() {
        try {
            setIconImage(Toolkit.getDefaultToolkit().getImage("src/images/icon2.png"));
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "", "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void toClean() {
        btn1.setText("");
        btn2.setText("");
        btn3.setText("");
        btn4.setText("");
        btn5.setText("");
        btn6.setText("");
        btn7.setText("");
        btn8.setText("");
        btn9.setText("");
        btn1.setBackground(null);
        btn2.setBackground(null);
        btn3.setBackground(null);
        btn4.setBackground(null);
        btn5.setBackground(null);
        btn6.setBackground(null);
        btn7.setBackground(null);
        btn8.setBackground(null);
        btn9.setBackground(null);
        number = 0;
        resultDraw = null;
        txtPair.setText("");
        txtOdd.setText("");
        ImageIcon icon = createImageIcon("/images/logo_preto.png", "Logo");
        lblLogo.setIcon(icon);
        lblExplanation.setText("");
        btnDraw.setToolTipText("Escolha 'X' ou 'O' para sortear!!");
    }

    private void playerXWinner() {
        boolean winner = false;
        if (btn1.getText().equals("X") && btn2.getText().equals("X") && btn3.getText().equals("X")) {
            btn1.setBackground(Color.red);
            btn2.setBackground(Color.red);
            btn3.setBackground(Color.red);
            winner = true;
        } else if (btn4.getText().equals("X") && btn5.getText().equals("X") && btn6.getText().equals("X")) {
            btn4.setBackground(Color.red);
            btn5.setBackground(Color.red);
            btn6.setBackground(Color.red);
            winner = true;
        } else if (btn7.getText().equals("X") && btn8.getText().equals("X") && btn9.getText().equals("X")) {
            btn7.setBackground(Color.red);
            btn8.setBackground(Color.red);
            btn9.setBackground(Color.red);
            winner = true;
        } else if (btn1.getText().equals("X") && btn4.getText().equals("X") && btn7.getText().equals("X")) {
            btn1.setBackground(Color.red);
            btn4.setBackground(Color.red);
            btn7.setBackground(Color.red);
            winner = true;
        } else if (btn2.getText().equals("X") && btn5.getText().equals("X") && btn8.getText().equals("X")) {
            btn2.setBackground(Color.red);
            btn5.setBackground(Color.red);
            btn8.setBackground(Color.red);
            winner = true;
        } else if (btn3.getText().equals("X") && btn6.getText().equals("X") && btn9.getText().equals("X")) {
            btn3.setBackground(Color.red);
            btn6.setBackground(Color.red);
            btn9.setBackground(Color.red);
            winner = true;
        } else if (btn1.getText().equals("X") && btn5.getText().equals("X") && btn9.getText().equals("X")) {
            btn1.setBackground(Color.red);
            btn5.setBackground(Color.red);
            btn9.setBackground(Color.red);
            winner = true;
        } else if (btn3.getText().equals("X") && btn5.getText().equals("X") && btn7.getText().equals("X")) {
            btn3.setBackground(Color.red);
            btn5.setBackground(Color.red);
            btn7.setBackground(Color.red);
            winner = true;
        }
        if (winner == true) {
            ImageIcon icon = createImageIcon("/images/confete.png", "Winner");
            lblLogo.setIcon(icon);
            lblExplanation.setText("O jogador X venceu a partida!");
            victoryX++;
            txtVictoriesX.setBackground(Color.green);
            String result = Integer.toString(victoryX);
            txtVictoriesO.setBackground(null);
            txtVictoriesX.setText(result);
            if (victoryO == 0) {
                txtVictoriesO.setText("0");
            }
            victories();
            toClean2();
        } else if (number == 9) {
            ImageIcon icon = createImageIcon("/images/recovered.png", "Hash");
            lblLogo.setIcon(icon);
            lblExplanation.setText("Partida Empatada!");
            if(victoryX==victoryO){
            txtVictoriesX.setBackground(Color.green);
            }
            victories();
            toClean2();
        }
    }

    private void playerOWinner() {
        boolean winner = false;
        if (btn1.getText().equals("O") && btn2.getText().equals("O") && btn3.getText().equals("O")) {
            btn1.setBackground(Color.blue);
            btn2.setBackground(Color.blue);
            btn3.setBackground(Color.blue);
            winner = true;
        } else if (btn4.getText().equals("O") && btn5.getText().equals("O") && btn6.getText().equals("O")) {
            btn4.setBackground(Color.blue);
            btn5.setBackground(Color.blue);
            btn6.setBackground(Color.blue);
            winner = true;
        } else if (btn7.getText().equals("O") && btn8.getText().equals("O") && btn9.getText().equals("O")) {
            btn7.setBackground(Color.blue);
            btn8.setBackground(Color.blue);
            btn9.setBackground(Color.blue);
            winner = true;
        } else if (btn1.getText().equals("O") && btn4.getText().equals("O") && btn7.getText().equals("O")) {
            btn1.setBackground(Color.blue);
            btn4.setBackground(Color.blue);
            btn7.setBackground(Color.blue);
            winner = true;
        } else if (btn2.getText().equals("O") && btn5.getText().equals("O") && btn8.getText().equals("O")) {
            btn2.setBackground(Color.blue);
            btn5.setBackground(Color.blue);
            btn8.setBackground(Color.blue);
            winner = true;
        } else if (btn3.getText().equals("O") && btn6.getText().equals("O") && btn9.getText().equals("O")) {
            btn3.setBackground(Color.blue);
            btn6.setBackground(Color.blue);
            btn9.setBackground(Color.blue);
            winner = true;
        } else if (btn1.getText().equals("O") && btn5.getText().equals("O") && btn9.getText().equals("O")) {
            btn1.setBackground(Color.blue);
            btn5.setBackground(Color.blue);
            btn9.setBackground(Color.blue);
            winner = true;
        } else if (btn3.getText().equals("O") && btn5.getText().equals("O") && btn7.getText().equals("O")) {
            btn3.setBackground(Color.blue);
            btn5.setBackground(Color.blue);
            btn7.setBackground(Color.blue);
            winner = true;
        }
        if (winner == true) {
            ImageIcon icon = createImageIcon("/images/confete.png", "Winner");
            lblLogo.setIcon(icon);
            lblExplanation.setText("O jogador O venceu a partida!");
            victoryO++;
            String result = Integer.toString(victoryO);
            txtVictoriesO.setText(result);
            txtVictoriesO.setBackground(Color.green);
            txtVictoriesX.setBackground(null);
            if (victoryX == 0) {
                txtVictoriesX.setText("0");
            }
            victories();
            toClean2();
        } else if (number == 9) {
            ImageIcon icon = createImageIcon("/images/recovered.png", "Hash");
            lblLogo.setIcon(icon);
            lblExplanation.setText("Partida Empatada!");
            if(victoryX==victoryO){
            txtVictoriesO.setBackground(Color.green);
            }
            victories();
            toClean2();
        }
    }

    private void toCleanDraw() {
        txtPair.setText("");
        txtOdd.setText("");
    }

    private void draw() {
        if (btn1.getText().isEmpty() && btn2.getText().isEmpty() && btn3.getText().isEmpty() && btn4.getText().isEmpty()
                && btn5.getText().isEmpty() && btn6.getText().isEmpty() && btn7.getText().isEmpty() && btn8.getText().isEmpty()
                && btn9.getText().isEmpty()) {
            numberDrawn = draw.nextInt(100) + 1;
            if (numberDrawn % 2 == 0) {
                txtPair.setForeground(red);
                txtPair.setText("X");
                resultDraw = "X";
            } else {
                txtOdd.setForeground(blue);
                txtOdd.setText("O");
                resultDraw = "O";
            }
        }
        if (!btn1.getText().equals("") || !btn2.getText().equals("") || !btn3.getText().equals("")
                || !btn4.getText().equals("") || !btn5.getText().equals("") || !btn6.getText().equals("") || !btn7.getText().equals("")
                || !btn8.getText().equals("") || !btn9.getText().equals("")) {
            btnDraw.setToolTipText("Tecle LJ para limpar os campos e realizar novo sorteio!!");
        }
        txtLimit.setEditable(false);
        txtLimit.setBackground(Color.green);
    }

    private void toClean2() {
        number = 0;
        resultDraw = null;
        txtPair.setText("");
        txtOdd.setText("");
    }

    private void toClean3() {
        btn1.setText("");
        btn2.setText("");
        btn3.setText("");
        btn4.setText("");
        btn5.setText("");
        btn6.setText("");
        btn7.setText("");
        btn8.setText("");
        btn9.setText("");
        btn1.setBackground(null);
        btn2.setBackground(null);
        btn3.setBackground(null);
        btn4.setBackground(null);
        btn5.setBackground(null);
        btn6.setBackground(null);
        btn7.setBackground(null);
        btn8.setBackground(null);
        btn9.setBackground(null);
        txtLimit.setText("");
        number = 0;
        resultDraw = null;
        txtPair.setText("");
        txtOdd.setText("");
        txtVictoriesO.setText("");
        txtVictoriesX.setText("");
        ImageIcon icon = createImageIcon("/images/logo_preto.png", "Logo");
        lblLogo.setIcon(icon);
        lblExplanation.setText("");
        txtLimit.setBackground(white);
        txtVictoriesO.setBackground(white);
        txtVictoriesX.setBackground(white);
        btnDraw.setEnabled(true);
        txtLimit.setText("");
        victoryO = 0;
        victoryX = 0;
        txtLimit.requestFocus();
        txtLimit.setEditable(true);
    }

    private void victories() {
        try {
            int reference;
            reference = victoryX + victoryO;
            if (txtLimit.getText().equals("")) {
                txtLimit.setText("0");
            }
            limit = Integer.valueOf(txtLimit.getText()); 
            if (reference == limit && limit != 0 && reference != 0) {
                if (victoryX < victoryO || victoryO == limit) {
                    ImageIcon icon = createImageIcon("/images/confete.png", "Winner");
                    lblLogo.setIcon(icon);
                    lblExplanation.setText("O jogador O é o grande Campeão!");
                    txtLimit.setEditable(true);
                    txtVictoriesO.setBackground(Color.green);
                    txtVictoriesX.setBackground(null);
                    btnDraw.setEnabled(false);
                    if (victoryO > rec) {
                        count = victoryO;                      
                        if (count > count1) {
                             int record = count;
                            records.searchRecord(record);
                            if(Records.r){
                               int into = count;
                            Records.insert(into);
                            }
                        }
                    }
                } else if (victoryX > victoryO || victoryX == limit) {
                    ImageIcon icon = createImageIcon("/images/confete.png", "Winner");
                    lblLogo.setIcon(icon);
                    lblExplanation.setText("O jogador X é o grande Campeão!");
                    txtLimit.setEditable(true);
                    txtVictoriesX.setBackground(Color.green);
                    txtVictoriesO.setBackground(null);
                    btnDraw.setEnabled(false);
                    if (victoryX > rec) {
                         count1 = victoryX;                        
                        if (count1 > count) {
                            int record = count1;
                            records.searchRecord(record);
                            if(Records.r)  {
                                int into = count1;
                            Records.insert(into);
                            }
                        }
                    }
                } else {
                    ImageIcon icon = createImageIcon("/images/recovered.png", "Hash");
                    lblLogo.setIcon(icon);
                    lblExplanation.setText("A Campanha terminou empatada!!");
                    btnDraw.setEnabled(false);
                    txtVictoriesO.setBackground(Color.green);
                    txtVictoriesX.setBackground(Color.green);
                }
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Erro!");
        }
    }
   
    private void close() {
        dispose();
    }

    private void subtitle() {
        if (!ckbSubtitle.isSelected()) {
            btnDraw.setToolTipText(null);
            btnDraw.setToolTipText(null);
            btnToClean.setToolTipText(null);
            btnToCleanCampaign.setToolTipText(null);
            txtLimit.setToolTipText(null);
        } else {
            btnDraw.setToolTipText("Escolha 'X' ou 'O' para sortear!!");
            btnToClean.setToolTipText("Limpar Jogo!!!");
            btnToCleanCampaign.setToolTipText("Limpar Campanha!!!");
            txtLimit.setToolTipText("Digite aqui o limite de partidas da Campanha!!");
        }
    }

    private void color() {
        if (!cbkTheme.isSelected()) {
            Color myColor = new Color(153, 153, 153);
            getContentPane().setBackground(myColor);
            btnDraw.setBackground(myColor);
            btnToClean.setBackground(myColor);
            btnToCleanCampaign.setBackground(myColor);
            btn1.setBackground(myColor);
            btn2.setBackground(myColor);
            btn3.setBackground(myColor);
            btn4.setBackground(myColor);
            btn5.setBackground(myColor);
            btn6.setBackground(myColor);
            btn7.setBackground(myColor);
            btn8.setBackground(myColor);
            btn9.setBackground(myColor);
            Color myColor1 = new Color(18, 30, 49);
            txtLimit.setBackground(myColor1);
            txtVictoriesO.setBackground(myColor1);
            txtVictoriesX.setBackground(myColor1);
            txtPair.setBackground(myColor1);
            txtOdd.setBackground(myColor1);
        } else {
            Color myColor2 = new Color(214, 217, 226);
            getContentPane().setBackground(myColor2);
            txtLimit.setBackground(white);
            txtVictoriesO.setBackground(white);
            txtVictoriesX.setBackground(white);
            txtPair.setBackground(white);
            txtOdd.setBackground(white);
            Color myColor3 = new Color(183, 183, 183);
            btnDraw.setBackground(myColor3);
            btnToClean.setBackground(myColor3);
            btnToCleanCampaign.setBackground(myColor3);
            btn1.setBackground(myColor3);
            btn2.setBackground(myColor3);
            btn3.setBackground(myColor3);
            btn4.setBackground(myColor3);
            btn5.setBackground(myColor3);
            btn6.setBackground(myColor3);
            btn7.setBackground(myColor3);
            btn8.setBackground(myColor3);
            btn9.setBackground(myColor3);
        }
    }
    
    public ImageIcon createImageIcon(String way, String description) {
		java.net.URL imgURL = getClass().getResource(way);
		if (imgURL != null) {
			return new ImageIcon(imgURL, description);
		} else {
			System.err.println("Não foi possível carregar o arquivo de imagem: " + way);
			return null;
		}
	}
}
